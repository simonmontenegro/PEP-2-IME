library(ggpubr)
library(pwr)
library(ggplot2)
library(tidyverse)
#===================
#==== PREGUNA 1 ====
#===================
#En trabajo de título de un estudiante del DIINF, se reportan los siguientes tiempos de
#ejecución ('Tpo' en milisegundos) medidos para dos versiones de un algoritmo genético
#(A6 y B12) para resolver instancias del problema del vendedor viajero disponibles en
#repositorios públicos. ¿Es uno de los algoritmos más rápido que el otro?
# información dada por enunciado
texto <- ("
Instancia 'Tpo A6' 'Tpo B12'
'rat575' 33349 32444
'u724' 55026 64019
'd657' 43352 52696
'rat783' 65076 76857
'u574' 112326 123456
'pr1002' 136262 162808
'fl1577' 3234574 3192222
'nrw1379' 335608 393213
'd1291' 268964 335566
'u1432' 398653 472597
'pcb1173' 303634 234658
'fl1400' 337977 430748
'u2152' 3073534 3253423
'rl1323' 243679 132654
'rl1304' 342321 231254
'u1817' 876432 672542
'vm1084' 413672 543215
'rl1889' 1876432 854213
'pr2392' 6764986 8765321
'u1060' 3453176 432876
")
datos <- read.table(textConnection(texto), header = TRUE)
# Ya con los datos leidos anteriormente, se prodede a discutir que prueba
# parametrica correspondería en este caso. La prueba más acorde para este
# problema es la "prueba Anova de una vía para muestras correlacionadas",
# especificamente en un escenario con diseño de medidas repetidas, ya que
# a una observación se le toman medidas de diferentes formas, es decir que
# se estan eligiendo diferentes instacias para dos versiones del
# algoritmo.
# Posterior a esto, se utlizará el siguiente procedimiento no paramétrico:
# "Prueba de rangos con signo de Wilcoxon ", pues se tienen muestras pareadas,
# es decir a través de una misma instancia se están analizando dos versiones
# del algoritmo (versión Tpo.A6 y tpo.B12)
# Sin embargo, para poder utilizar esta prueba es necesario llevar a cabo la
# verificación de una serie de condiciones:
# CONDICIONES:
#1) Los pares de observaciones son independientes.
#   verificación: Dado que cada instacia obtenida del algoritmo genético es
#                 distinta a todas las demás, es razanoble concluir la
#                 independencia entre cada una.
#
#2) La escala de medición empleada para las mediciones es intrínsicamente continua.
#   verificación: Dado que se está hablando de tiempo, es lógico suponer que se
#                 está hablando de una escala de medición continua.
#3) La escala de medición empleada para ambas muestras debe ser a lo menos ordinal.
#   verificación: Cuando se está tratando con una escala de medición correspondiente
#                 al tiempo, es natural evaluarlo con palabras, mayor que, menor que
#                 igual que, etc. Por lo que la escala de medición utilizada en este
#                 problema es ordinal definitivamente.
# Ya con las condiciones verificadas, se procede a definir las hipótsis a contrastar:
# Hipótesis nula (H0): Los dos versiones del algoritmo son igual de rápidas.
# Hipótesis alternativa (HA): la versión A6 es más rápida que la versión B12.
# Ya con las hipótesis descritas y con las condiciones verificadas, se efectua
# la prueba correspondiente:
# nivel de significancia
alpha <- 0.05
# ejecución de la prueba
pruebaWilcoxon <- wilcox.test(datos[["Tpo.A6"]],
datos[["Tpo.B12"]],
alternative = "greater",
paired = TRUE,
config.level = 1 - alpha)
pruebaWilcoxon
texto2 <- ("
Nueva Actual Control
81 48 18
32 31 49
42 25 33
62 22 19
37 30 24
44 30 17
38 32 48
47 15 22
49 40 --
41 -- --
")
datos2 <- read.table(textConnection(texto2), header = TRUE, na.strings = "--")
View(datos2)
datos2 <- datos2 %>% pivot_longer(c("Nueva", "Actual","Control"),
names_to = "Producto",
values_to = "Manchas Removidas"
)
View(datos2)
datos2 <- datos2 %>% pivot_longer(c("Nueva", "Actual","Control"),
names_to = "Producto",
values_to = "Manchas_Removidas"
)
View(datos2)
source("C:/Users/cuchu/Desktop/IME/Actividades/Actividad 10/EP10-respuesta-sala-1.R")
texto2 <- ("
Nueva Actual Control
81 48 18
32 31 49
42 25 33
62 22 19
37 30 24
44 30 17
38 32 48
47 15 22
49 40 --
41 -- --
")
datos2 <- read.table(textConnection(texto2), header = TRUE, na.strings = "--")
datos2 <- datos2 %>% pivot_longer(c("Nueva", "Actual","Control"),
names_to = "Producto",
values_to = "Manchas_Removidas"
)
View(datos2)
# nivel de significancia
alpha <- 0.05
# Prueba de Kruskal-Wallis
pruebaKruskal <- kruskal.test(Manchas_removidas ~ Producto, data = datos2)
print(pruebaKruskal)
View(datos2)
# nivel de significancia
alpha <- 0.05
# Prueba de Kruskal-Wallis
pruebaKruskal <- kruskal.test(Manchas_Removidas ~ Producto, data = datos2)
print(pruebaKruskal)
post_hoc <- pairwise.wilcox.test(datos2$Manchas_Removidas,
datos2$Producto,
p.adjust.method = "holm",
paired = FALSE)
print(post_hoc)
# Prueba de Kruskal-Wallis
pruebaKruskal <- kruskal.test(Manchas_Removidas ~ Producto, data = datos2, na.action = TRUE)
print(pruebaKruskal)
# nivel de significancia
alpha <- 0.05
# Prueba de Kruskal-Wallis
pruebaKruskal <- kruskal.test(Manchas_Removidas ~ Producto, data = datos2, na.action = FALSE)
print(pruebaKruskal)
# nivel de significancia
alpha <- 0.05
# Prueba de Kruskal-Wallis
pruebaKruskal <- kruskal.test(Manchas_Removidas ~ Producto, data = datos2)
print(pruebaKruskal)
post_hoc <- pairwise.wilcox.test(datos2$Manchas_Removidas,
datos2$Producto,
p.adjust.method = "holm",
paired = FALSE)
print(post_hoc)
post_hoc <- pairwise.wilcox.test(datos2$Manchas_Removidas,
datos2$Producto,
p.adjust.method = "bonferroni",
paired = FALSE)
print(post_hoc)
